{"version":3,"sources":["AgentzExpansionPanel.js","AgentzSearchComponent.js","MultiSelectBar.js","App.js","serviceWorker.js","index.js"],"names":["ExpansionPanel","state","Fragment","className","Switch","color","name","inputProps","Component","useStyles","makeStyles","theme","root","padding","display","alignItems","width","height","input","marginLeft","flex","iconButton","divider","margin","CustomizedInputBase","classes","Paper","variant","component","InputBase","placeholder","IconButton","type","aria-label","makeAnimated","animatedComponents","App","props","handleSelectedIndustry","selectedIndustry","setState","handleSelectedTag","selectedtag","industry","id","label","tag","this","style","maxWidth","class","Typography","gutterBottom","closeMenuOnSelect","components","isMulti","options","value","isFixed","AgentzExpansionPanel","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.00709290.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './App.css'\nimport Switch from '@material-ui/core/Switch'\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\n\nclass ExpansionPanel extends Component {\n  state = {}\n  render() {\n    return (\n      <React.Fragment>\n        <div className='agentz-middleexpand-comp'>\n          <div className='agentz-switch-button'>\n            <Switch color='primary' name='checkedB' inputProps={{ 'aria-label': 'primary checkbox' }} />\n          </div>\n          <div className='agentz-expand-overview'>Services Offered</div>\n          <div className='agentz-rightside-arrow'><KeyboardArrowRightIcon /></div>\n        </div>\n        <div className='agentz-middleexpand-comp'>\n          <div className='agentz-switch-button'>\n            <Switch color='primary' name='checkedB' inputProps={{ 'aria-label': 'primary checkbox' }} />\n          </div>\n          <div className='agentz-expand-overview'>Products Offered</div>\n          <div className='agentz-rightside-arrow'><KeyboardArrowRightIcon /></div>\n        </div>\n        <div className='agentz-middleexpand-comp'>\n          <div className='agentz-switch-button'>\n            <Switch color='primary' name='checkedB' inputProps={{ 'aria-label': 'primary checkbox' }} />\n          </div>\n          <div className='agentz-expand-overview'>Cost of service</div>\n          <div className='agentz-rightside-arrow'><KeyboardArrowRightIcon /></div>\n        </div>\n        <div className='agentz-middleexpand-comp'>\n          <div className='agentz-switch-button'>\n            <Switch color='primary' name='checkedB' inputProps={{ 'aria-label': 'primary checkbox' }} />\n          </div>\n          <div className='agentz-expand-overview'>Deep Learning</div>\n          <div className='agentz-rightside-arrow'><KeyboardArrowRightIcon /></div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default ExpansionPanel\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: \"290px\",\n    height: '30px'\n  },\n  input: {\n    marginLeft: '20px',\n    flex: 1,\n    height: '20px'\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    height: 28,\n    margin: 4,\n  },\n}));\n\nexport default function CustomizedInputBase() {\n  const classes = useStyles();\n\n  return (\n    <Paper variant=\"outlined\" component=\"form\" className={classes.root}>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Search Queries\"\n        inputProps={{ 'aria-label': 'search google maps' }}\n      />\n      <IconButton type=\"submit\" className={classes.iconButton} aria-label=\"search\">\n        <SearchIcon />\n      </IconButton>\n    </Paper>\n  );\n}","import React from 'react';\n\nimport Select from 'react-select';\nimport makeAnimated from 'react-select/animated';\nimport { colourOptions } from './data';\n\nconst animatedComponents = makeAnimated();\n\nexport default function AnimatedMulti() {\n  return (\n    <Select\n      closeMenuOnSelect={false}\n      components={animatedComponents}\n      defaultValue={[colourOptions[4], colourOptions[5]]}\n      isMulti\n      options={colourOptions}\n    />\n  );\n}","import React, { Component } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport AgentzExpansionPanel from './AgentzExpansionPanel'\nimport './App.css'\nimport SearchInput from './AgentzSearchComponent'\nimport MultiSelect from './MultiSelectBar'\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/animated'\nimport { colourOptions } from './data'\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst animatedComponents = makeAnimated()\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedIndustry: [],\n      selectedtag: [],\n      industry: [\n        { id: 0, label: 'Travel' },\n        { id: 1, label: 'Fashion' },\n        { id: 2, label: 'Gym' },\n        { id: 3, label: 'Health' },\n      ],\n      tag: [\n        { id: 0, label: 'Custom' },\n        { id: 1, label: 'Pre-Trained' },\n        { id: 2, label: 'Products' },\n        { id: 3, label: 'Basic' },\n      ],\n    }\n  }\n\n  handleSelectedIndustry = (selectedIndustry) => {\n    this.setState({ selectedIndustry })\n  }\n  handleSelectedTag = (selectedtag) => {\n    this.setState({ selectedtag })\n  }\n  render() {\n    const data =    [{ value: 'ocean', label: 'Ocean', color: '#00B8D9', isFixed: true },\n    { value: 'purple', label: 'Purple', color: '#5243AA' },\n    { value: 'red', label: 'Red', color: '#FF5630', isFixed: true },\n    { value: 'orange', label: 'Orange', color: '#FF8B00' },\n    { value: 'yellow', label: 'Yellow', color: '#FFC400' },\n    { value: 'green', label: 'Green', color: '#36B37E' },\n    { value: 'forest', label: 'Forest', color: '#00875A' },\n    { value: 'slate', label: 'Slate', color: '#253858' },\n    { value: 'silver', label: 'Silver', color: '#666666' },];\n    const items = [\n      { label: 'Travel', value: 1 },\n      { label: 'Fashion', value: 2 },\n      { label: 'Gym', value: 3 },\n      { label: 'Home Improve', value: 4 },\n      { label: 'Health', value: 5 },\n    ]\n    const options1 = [\n      { label: 'Custom', value: 1 },\n      { label: 'Pre-Trained', value: 2 },\n      { label: 'Products', value: 3 },\n      { label: 'Services', value: 4 },\n      { label: 'Basic', value: 5 },\n    ]\n    const { industry, selectedIndustry, tag, selectedtag } = this.state\n    return (\n      <div style={{maxWidth: \"800px\",\n        margin: \"12.5vh auto\"}}>\n        <div class='agentz-kb-typography'>\n          <Typography variant='h6' gutterBottom>\n            Manage your Agent's Knowledge Base\n          </Typography>\n          <Typography variant='body2' gutterBottom>\n            Your agent can understand the following requests and answer them appropriately.\n          </Typography>\n        </div>\n\n        <div className='agentz-custom-topbar'>\n\n            <Select\n              closeMenuOnSelect={false}\n              components={animatedComponents}\n              isMulti\n              placeholder={'Filter'}\n              options={data}\n              className='agentz-custom-topselectbar'\n            />\n          <div className='agentz-custom-topsearchbar'>\n            <SearchInput />\n          </div>\n        </div>\n        <div className='agentz-expand-comp'>\n          <div className='agentz-expand-header'>\n            <div>\n              <div className='agentz-expand-subheader'>Questions and Answers</div>\n            </div>\n          </div>\n          <AgentzExpansionPanel />\n          <div className='agentz-expand-footer'>\n            <div className='agentz-expand-footerleft'>\n              <button className='agentz-expand-footerbutton'><AddIcon/><p style={{marginLeft:\"8px\"}}>Add custom user query</p></button>\n            </div>\n            <div className='agentz-expand-footerright'>\n              <button className='agentz-expand-footerbutton'><AddIcon/><p style={{marginLeft:\"8px\"}}>Add pretrained user query</p></button>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}